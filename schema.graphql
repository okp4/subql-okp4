"""
AnyJSON is the type of a JSON object that can contain any valid JSON value.
"""
type AnyJSON @jsonField {
    """
    Any other field of the message.
    """
    _: String
}

"""
A JSON object that represents a Cosmos SDK message, with typeUrl being the type of the message.
"""
type MessageJSON @jsonField {
    """
    Type of the message.
    """
    typeUrl: String
    """
    Any other field of the message.
    """
    _: String
}

"""
A Cosmos SDK block in the blockchain.
"""
type Block @entity {
    """
    Unique identifier of t he block and hash of the block.
    """
    id: ID!
    """
    Chain identifier of the blockchain.
    """
    chainId: String! @index
    """
    Height of the block in the blockchain.
    """
    height: BigInt! @index
    """
    Time at which the block was committed to the blockchain.
    """
    timestamp: String!
    """
    List of transactions contained in the block.
    """
    transactions: [Transaction] @derivedFrom(field: "block")
    """
    List of messages contained in the block transactions.
    """
    messages: [Message] @derivedFrom(field: "block")
}

"""
A Cosmos SDK coin.
"""
type Coin @jsonField {
    """
    Denomination of the coin.
    """
    denom: String!
    """
    Amount of the coin.
    """
    amount: String!
}

"""
A Cosmos SDK public key.
"""
type PublicKey @jsonField {
    """
    The type url of public key.
    """
    typeUrl: String!
    """
    The public key.
    """
    key: String!
}

"""
A Cosmos SDK account. Can be any account found in the Cosmos module auth or OKP4 vesting module.
"""
type Account @entity {
    """
    The account address.
    """
    id: ID!
    """
    The account public key.
    """
    pubKey: PublicKey
    """
    Account Balances in different denominators.
    """
    balances: [Coin]!
    """
    Objectarium objects stored by the account.
    """
    storedObjectariumObjects: [ObjectariumObject] @derivedFrom(field: "sender")
    """
    Objectarium objects pinned by the account.
    """
    pinnedObjectariumObjects: [ObjectariumObjectPin]
        @derivedFrom(field: "account")
    """
    Objectariums created by the account.
    """
    createdObjectariums: [Objectarium] @derivedFrom(field: "creator")
    """
    Objectariums owned by the account.
    """
    ownedObjectariums: [Objectarium] @derivedFrom(field: "owner")
    """
    Contracts created by the account.
    """
    createdContracts: [Contract] @derivedFrom(field: "creator")
    """
    Objectarium objects pinned by the account.
    """
    contractPermissions: [ContractPermissionAccount]
        @derivedFrom(field: "account")
}

"""
A Cosmos SDK transaction in the blockchain.
"""
type Transaction @entity {
    """
    Unique identifier of the transaction and hash of the transaction.
    """
    id: ID!
    """
    Index of the transaction in the block.
    """
    index: Int! @index
    """
    Block that transaction belongs to.
    """
    block: Block!
    """
    Gas used by the transaction.
    """
    gasUsed: BigInt!
    """
    Gas wanted by the transaction.
    """
    gasWanted: BigInt!
    """
    List of fees paid by the transaction.
    """
    fees: [Coin]!
    """
    A memo that can be attached to the transaction.
    """
    memo: String @index
    """
    Log of the transaction.
    """
    log: AnyJSON!
    """
    Timeout height of the transaction.
    """
    timeoutHeight: BigInt @index
    """
    List of messages contained in the transaction.
    """
    messages: [Message] @derivedFrom(field: "transaction")
}

"""
A Cosmos SDK message in the blockchain.
"""
type Message @entity {
    """
    Unique identifier of the message and hash of the message.
    """
    id: ID!
    """
    The decoded message in JSON format.
    """
    message: MessageJSON!
    """
    Transaction that message belongs to.
    """
    transaction: Transaction!
    """
    Block that message belongs to.
    """
    block: Block!
    """
    Objectarium that message relates to (for a message which concerns an objectarium smart contract).
    """
    objectarium: Objectarium
    """
    Object that message relates to (for a message which concerns an object).
    """
    objectariumObject: ObjectariumObject
    """
    Smart contract from which smart contract instances are created.
    """
    contract: Contract
}

"""
The pin of an objectarium object.
"""
type ObjectariumObjectPin @entity {
    """
    Unique identifier made up by the account address and the objectarium object hash identifier.
    """
    id: ID!
    """
    The objectarium object being pinned.
    """
    objectariumObject: ObjectariumObject!
    """
    The account pinning the object.
    """
    account: Account!
}

"""
Type of an object stored in the Objectarium smart contract instance.
"""
type ObjectariumObject @entity {
    """
    Identifier of an object in the smart contract instance (aka bucket).
    It is the hash of the object's content using the hash algorithm configured for the bucket.
    """
    id: ID!
    """
    Account that stored the object.
    """
    sender: Account!
    """
    The smart contract instance (aka bucket) where the object is stored.
    """
    objectarium: Objectarium!
    """
    A list of objectarium object pins containing the accounts that have pinned the object.
    """
    pins: [ObjectariumObjectPin!]! @derivedFrom(field: "objectariumObject")
    """
    List of messages that concern the object.
    """
    messages: [Message]! @derivedFrom(field: "objectariumObject")
}

"""
BucketConfig is the type of the configuration of a bucket.
"""
type BucketConfig @jsonField {
    """
    The algorithm used to hash the content of the objects to generate the id of the objects.
    """
    hashAlgorithm: String
    """
    The acceptable compression algorithms for the objects in the bucket.
    """
    acceptedCompressionAlgorithms: [String!]
}

"""
BucketLimits is the type of the limits of a Objectarium bucket.
The limits are optional and if not set, there is no limit.
"""
type BucketLimits @jsonField {
    """
    The maximum total size of the objects in the bucket.
    """
    maxTotalSize: BigInt
    """
    The maximum number of objects in the bucket.
    """
    maxObjects: BigInt
    """
    The maximum size of the objects in the bucket.
    """
    maxObjectSize: BigInt
    """
    The maximum number of pins in the bucket for an object.
    """
    maxObjectPins: BigInt
}

"""
Objectarium smart contract instance (aka bucket).
"""
type Objectarium @entity {
    """
    Identifier of the smart contract instance.
    It is the address of the smart contract instance.
    """
    id: ID!
    """
    The account that created the bucket.
    """
    creator: Account!
    """
    The account that owns the bucket.
    """
    owner: Account!
    """
    Label of the bucket.
    """
    label: String!
    """
    The name of the bucket.
    """
    name: String!
    """
    The configuration of the bucket.
    """
    config: BucketConfig
    """
    The limits of the bucket.
    """
    limits: BucketLimits
    """
    List of objects contained within the Objectarium instance.
    """
    objectariumObjects: [ObjectariumObject] @derivedFrom(field: "objectarium")
    """
    List of messages that concern the entity.
    """
    messages: [Message]! @derivedFrom(field: "objectarium")
    """
    Smart contract from which the bucket instance were created.
    """
    contract: Contract!
}

"""
An account of a contract permission.
"""
type ContractPermissionAccount @entity {
    """
    Unique identifier made up by the account address and the contract code id.
    """
    id: ID!
    """
    The contract with the permission.
    """
    contract: Contract!
    """
    The account concerned by the contract permission.
    """
    account: Account!
}

"""
COSMWASM smart contract.
"""
type Contract @entity {
    """
    Identifier of the smart contract.
    Corresponds to the code id of the contract.
    """
    id: ID!
    """
    The sha256sum hash of the contract.
    """
    dataHash: String!
    """
    The account that created the smart contract.
    """
    creator: Account!
    """
    Contract access permission.
    """
    permission: String
    """
    List of account permission associations included in the access permission.
    """
    permissionAccounts: [ContractPermissionAccount!]
        @derivedFrom(field: "contract")
    """
    List of messages that concern the smart contract.
    """
    messages: [Message]! @derivedFrom(field: "contract")
    """
    List of objectarium smart contracts instantiated from contract.
    """
    objectariums: [Objectarium] @derivedFrom(field: "contract")
}
