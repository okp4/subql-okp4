# Equivalent to typescript any type
type AnyJSON @jsonField {
  # Need to have one value in this field
  _: String
}


type Block @entity {
  id: ID! # The block header hash
  chainId: String! @index
  height: BigInt! @index
  timestamp: String!
  transactions: [Transaction] @derivedFrom(field: "block")
  messages: [Message] @derivedFrom(field: "block")
} 

enum TxStatus {
  Success
  Error
}

type Coin @entity {
  id: ID!
  denom: String!
  amount: BigInt!
  transaction: Transaction!
}

type Transaction @entity {
  id: ID!
  index: Int! @index
  block: Block!
  gasUsed: BigInt!
  gasWanted: BigInt!
  fees: [Coin] @derivedFrom(field: "transaction")
  memo: String @index
  status: TxStatus!
  log: AnyJSON!
  timeoutHeight: BigInt @index
  messages: [Message] @derivedFrom(field: "transaction")
}
"""
ObjectariumObject is the type of an object stored in the Objectarium smart contract instance.
"""
type ObjectariumObject @entity {
    """
    id is the type of identifier of an object in the smart contract instance (aka bucket).
    It is the hash of the object's content using the hash algorithm configured for the bucket.
    """
    id: ID!
    """
    sender is the address of the user who stored the object.
    """
    sender: String! @index
    """
    contract is the address of the smart contract instance (aka bucket) where the object is stored.
    """
    contract: String! @index
    """
    pins contains the addresses that have pinned the object.
    """
    pins: [String!]
}
