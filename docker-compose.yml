version: "3"

services:
  postgres-subql:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - ${DB_SUBQL_PORT}:5432
    volumes:
      - postgres-subql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_SUBQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_SUBQL_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node:
    image: onfinality/subql-node-cosmos:v2.8.0
    depends_on:
      postgres-subql:
        condition: service_healthy
    restart: always
    environment:
      DB_USER: ${DB_SUBQL_USER}
      DB_PASS: ${DB_SUBQL_PASSWORD}
      DB_DATABASE: ${DB_SUBQL_NAME}
      DB_HOST: postgres-subql
      DB_PORT: ${DB_SUBQL_PORT}
    volumes:
      - ${PWD}:/app
    command:
      - ${SUB_COMMAND}
      - -f=/app
      - --db-schema=app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: onfinality/subql-query:v2.2.0
    ports:
      - 3000:3000
    depends_on:
      postgres-subql:
        condition: service_healthy
      subquery-node:
        condition: service_healthy
    restart: always
    environment:
      DB_USER: ${DB_SUBQL_USER}
      DB_PASS: ${DB_SUBQL_PASSWORD}
      DB_DATABASE: ${DB_SUBQL_NAME}
      DB_HOST: postgres-subql
      DB_PORT: ${DB_SUBQL_PORT}
    command:
      - --name=app
      - --playground
      - --indexer=http://subquery-node:3000

volumes:
  postgres-subql-data:

